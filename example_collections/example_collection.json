{"flows":[{"name":"Basic RAG Example","description":"Build Retrieval Augmented Question Answering on the Kalavai Network","data":{"nodes":[{"id":"KalavaiLlm-UTSYC","type":"genericNode","position":{"x":725.3194922736798,"y":-35.23333740234375},"data":{"type":"KalavaiLlm","node":{"template":{"code":{"type":"code","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"value":"import os\nimport json\nfrom typing import Optional, Union\n\nfrom langchain.llms import BaseLLM\nfrom langchain_community.chat_models.openai import ChatOpenAI\n\nfrom langflow import CustomComponent\nfrom langflow.field_typing import BaseLanguageModel, NestedDict\n\n\nclass KalavaiLLMComponent(CustomComponent):\n    display_name = \"KalavaiLLM\"\n    description = \"API for LLM models deployed in Kalavai.\"\n    \n    def _load_endpoints(self):\n        MODEL_ENDPOINTS_FILE = os.getenv(\"MODEL_ENDPOINTS\", \"data/model_endpoints.json\")\n        \n        with open(MODEL_ENDPOINTS_FILE, \"r\") as f:\n            return json.load(f)\n        \n\n    def build_config(self):\n        model_endpoints = self._load_endpoints()\n        api_key = os.getenv(\"MODEL_ENDPOINT_API_KEY\", \"N3E9AGVU7IR9E6QLXMIP6YO330M2D005DH5MN4C6\")\n        return {\n            \"max_tokens\": {\n                \"display_name\": \"Max Tokens\",\n                \"field_type\": \"int\",\n                \"advanced\": False,\n                \"required\": False,\n            },\n            \"model_kwargs\": {\n                \"display_name\": \"Model Kwargs\",\n                \"field_type\": \"NestedDict\",\n                \"advanced\": True,\n                \"required\": False,\n            },\n            \"model_name\": {\n                \"display_name\": \"Model Name\",\n                \"field_type\": \"str\",\n                \"advanced\": False,\n                \"required\": False,\n                \"options\": list(model_endpoints.keys()),\n            },\n            \"kalavai_api_key\": {\n                \"display_name\": \"Kalavai API Key\",\n                \"field_type\": \"str\",\n                \"advanced\": True,\n                \"required\": False,\n                \"password\": True,\n                \"value\": api_key\n            },\n            \"temperature\": {\n                \"display_name\": \"Temperature\",\n                \"field_type\": \"float\",\n                \"advanced\": False,\n                \"required\": False,\n                \"value\": 0.7,\n            },\n        }\n\n    def build(\n        self,\n        max_tokens: Optional[int] = 256,\n        model_kwargs: NestedDict = {},\n        model_name: str = \"Equall/Saul-Instruct-v1\",\n        kalavai_api_key: Optional[str] = None,\n        temperature: float = 0.7,\n    ) -> Union[BaseLanguageModel, BaseLLM]:\n        model_endpoints = self._load_endpoints()\n        return ChatOpenAI(\n            max_tokens=max_tokens,\n            model_kwargs=model_kwargs,\n            model=model_name,\n            base_url=model_endpoints[model_name],\n            api_key=kalavai_api_key,\n            temperature=temperature,\n        )","fileTypes":[],"file_path":"","password":false,"name":"code","advanced":false,"dynamic":true,"info":"","title_case":true},"kalavai_api_key":{"type":"str","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"value":"N3E9AGVU7IR9E6QLXMIP6YO330M2D005DH5MN4C6","fileTypes":[],"file_path":"","password":true,"name":"kalavai_api_key","display_name":"Kalavai API Key","advanced":true,"dynamic":false,"info":"","title_case":true},"max_tokens":{"type":"int","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"value":256,"fileTypes":[],"file_path":"","password":false,"name":"max_tokens","display_name":"Max Tokens","advanced":false,"dynamic":false,"info":"","title_case":true},"model_kwargs":{"type":"NestedDict","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"value":{},"fileTypes":[],"file_path":"","password":false,"name":"model_kwargs","display_name":"Model Kwargs","advanced":true,"dynamic":false,"info":"","title_case":true},"model_name":{"type":"str","required":false,"placeholder":"","list":true,"show":true,"multiline":false,"value":"meta-llama/Meta-Llama-3-8B-Instruct","fileTypes":[],"file_path":"","password":false,"options":["meta-llama/Meta-Llama-3-8B-Instruct","Equall/Saul-Instruct-v1"],"name":"model_name","display_name":"Model Name","advanced":false,"dynamic":false,"info":"","title_case":true},"temperature":{"type":"float","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"value":0.7,"fileTypes":[],"file_path":"","password":false,"name":"temperature","display_name":"Temperature","advanced":false,"dynamic":false,"info":"","rangeSpec":{"min":-1,"max":1,"step":0.1},"title_case":true},"_type":"CustomComponent"},"description":"API for LLM models deployed in Kalavai.","base_classes":["BaseLanguageModel","BaseLLM","BaseLanguageModel"],"display_name":"KalavaiLLM","documentation":"","custom_fields":{"max_tokens":null,"model_kwargs":null,"model_name":null,"kalavai_api_key":null,"temperature":null},"output_types":["BaseLanguageModel","BaseLLM"],"field_formatters":{},"beta":true},"id":"KalavaiLlm-UTSYC"},"selected":false,"width":384,"height":543},{"id":"RetrievalQA-JFfxD","type":"genericNode","position":{"x":1673.8725742931108,"y":523.5984503198706},"data":{"type":"RetrievalQA","node":{"template":{"combine_documents_chain":{"type":"BaseCombineDocumentsChain","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"combine_documents_chain","display_name":"Combine Documents Chain","advanced":false,"dynamic":false,"info":"","title_case":true},"memory":{"type":"BaseMemory","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"memory","display_name":"Memory","advanced":false,"dynamic":false,"info":"","title_case":true},"retriever":{"type":"BaseRetriever","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"retriever","display_name":"Retriever","advanced":false,"dynamic":false,"info":"","title_case":true},"code":{"type":"code","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"value":"from typing import Callable, Optional, Union\n\nfrom langchain.chains.combine_documents.base import BaseCombineDocumentsChain\nfrom langchain.chains.retrieval_qa.base import BaseRetrievalQA, RetrievalQA\nfrom langflow import CustomComponent\nfrom langflow.field_typing import BaseMemory, BaseRetriever\n\n\nclass RetrievalQAComponent(CustomComponent):\n    display_name = \"RetrievalQA\"\n    description = \"Chain for question-answering against an index.\"\n\n    def build_config(self):\n        return {\n            \"combine_documents_chain\": {\"display_name\": \"Combine Documents Chain\"},\n            \"retriever\": {\"display_name\": \"Retriever\"},\n            \"memory\": {\"display_name\": \"Memory\", \"required\": False},\n            \"input_key\": {\"display_name\": \"Input Key\", \"advanced\": True},\n            \"output_key\": {\"display_name\": \"Output Key\", \"advanced\": True},\n            \"return_source_documents\": {\"display_name\": \"Return Source Documents\"},\n        }\n\n    def build(\n        self,\n        combine_documents_chain: BaseCombineDocumentsChain,\n        retriever: BaseRetriever,\n        memory: Optional[BaseMemory] = None,\n        input_key: str = \"query\",\n        output_key: str = \"result\",\n        return_source_documents: bool = True,\n    ) -> Union[BaseRetrievalQA, Callable]:\n        return RetrievalQA(\n            combine_documents_chain=combine_documents_chain,\n            retriever=retriever,\n            memory=memory,\n            input_key=input_key,\n            output_key=output_key,\n            return_source_documents=return_source_documents,\n        )\n","fileTypes":[],"file_path":"","password":false,"name":"code","advanced":false,"dynamic":true,"info":"","title_case":true},"input_key":{"type":"str","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"value":"query","fileTypes":[],"file_path":"","password":false,"name":"input_key","display_name":"Input Key","advanced":true,"dynamic":false,"info":"","title_case":true},"output_key":{"type":"str","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"value":"result","fileTypes":[],"file_path":"","password":false,"name":"output_key","display_name":"Output Key","advanced":true,"dynamic":false,"info":"","title_case":true},"return_source_documents":{"type":"bool","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"value":true,"fileTypes":[],"file_path":"","password":false,"name":"return_source_documents","display_name":"Return Source Documents","advanced":false,"dynamic":false,"info":"","title_case":true},"_type":"CustomComponent"},"description":"Chain for question-answering against an index.","base_classes":["BaseRetrievalQA","Chain","Callable"],"display_name":"RetrievalQA","documentation":"","custom_fields":{"combine_documents_chain":null,"retriever":null,"memory":null,"input_key":null,"output_key":null,"return_source_documents":null},"output_types":["BaseRetrievalQA","Callable"],"field_formatters":{},"beta":true},"id":"RetrievalQA-JFfxD"},"selected":false,"width":384,"height":502},{"id":"CombineDocsChain-RoWar","type":"genericNode","position":{"x":1209.875644476401,"y":297.9196358451761},"data":{"type":"CombineDocsChain","node":{"template":{"llm":{"type":"BaseLanguageModel","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"value":"","fileTypes":[],"file_path":"","password":false,"name":"llm","display_name":"LLM","advanced":false,"dynamic":false,"info":"","title_case":true},"chain_type":{"type":"str","required":true,"placeholder":"","list":true,"show":true,"multiline":false,"value":"stuff","fileTypes":[],"file_path":"","password":false,"options":["stuff","map_reduce","map_rerank","refine"],"name":"chain_type","advanced":false,"dynamic":false,"info":"","title_case":true},"_type":"load_qa_chain"},"description":"Load question answering chain.","base_classes":["BaseCombineDocumentsChain","Callable"],"display_name":"CombineDocsChain","documentation":"","custom_fields":{},"output_types":[],"field_formatters":{},"beta":false},"id":"CombineDocsChain-RoWar"},"selected":false,"width":384,"height":333},{"id":"VectorStoreRetriever-HhAfJ","type":"genericNode","position":{"x":1212.0761528831624,"y":782.3173486940761},"data":{"type":"VectorStoreRetriever","node":{"template":{"vectorstore":{"type":"VectorStore","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"vectorstore","display_name":"Vector Store","advanced":false,"dynamic":false,"info":"","title_case":true},"code":{"type":"code","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"value":"from langchain_core.vectorstores import VectorStoreRetriever\n\nfrom langflow import CustomComponent\nfrom langflow.field_typing import VectorStore\n\n\nclass VectoStoreRetrieverComponent(CustomComponent):\n    display_name = \"VectorStore Retriever\"\n    description = \"A vector store retriever\"\n\n    def build_config(self):\n        return {\n            \"vectorstore\": {\"display_name\": \"Vector Store\", \"type\": VectorStore},\n        }\n\n    def build(self, vectorstore: VectorStore) -> VectorStoreRetriever:\n        return vectorstore.as_retriever()\n","fileTypes":[],"file_path":"","password":false,"name":"code","advanced":false,"dynamic":true,"info":"","title_case":true},"_type":"CustomComponent"},"description":"A vector store retriever","base_classes":["VectorStoreRetriever","BaseRetriever"],"display_name":"VectorStore Retriever","documentation":"","custom_fields":{"vectorstore":null},"output_types":["VectorStoreRetriever"],"field_formatters":{},"beta":true},"id":"VectorStoreRetriever-HhAfJ"},"selected":false,"width":384,"height":329},{"id":"KalavaiDB-yi2jj","type":"genericNode","position":{"x":726.2514329243163,"y":583.3451840691723},"data":{"type":"KalavaiDB","node":{"template":{"documents":{"type":"Document","required":false,"placeholder":"","list":true,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"documents","display_name":"Documents","advanced":false,"dynamic":false,"info":"","title_case":true},"embedding":{"type":"Embeddings","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"embedding","display_name":"Embedding","advanced":false,"dynamic":false,"info":"","title_case":true},"chroma_server_cors_allow_origins":{"type":"str","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"chroma_server_cors_allow_origins","display_name":"Server CORS Allow Origins","advanced":true,"dynamic":false,"info":"","title_case":true},"chroma_server_grpc_port":{"type":"int","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"chroma_server_grpc_port","display_name":"Server gRPC Port","advanced":true,"dynamic":false,"info":"","title_case":true},"chroma_server_host":{"type":"str","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"chroma_server_host","display_name":"Server Host","advanced":true,"dynamic":false,"info":"","title_case":true},"chroma_server_port":{"type":"int","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"chroma_server_port","display_name":"Server Port","advanced":true,"dynamic":false,"info":"","title_case":true},"chroma_server_ssl_enabled":{"type":"bool","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"value":false,"fileTypes":[],"file_path":"","password":false,"name":"chroma_server_ssl_enabled","display_name":"Server SSL Enabled","advanced":true,"dynamic":false,"info":"","title_case":true},"code":{"type":"code","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"value":"\"\"\"\nReference: https://github.com/langflow-ai/langflow/tree/dev/src/backend/base/langflow/components/vectorstores\n\"\"\"\nfrom typing import List, Optional, Union\n\nimport chromadb  # type: ignore\nfrom langchain.embeddings.base import Embeddings\nfrom langchain.schema import BaseRetriever, Document\nfrom langchain_community.vectorstores import VectorStore\nfrom langchain_community.vectorstores.chroma import Chroma\nfrom langflow import CustomComponent\n\n\nclass KalavaiVectorDBComponent(CustomComponent):\n    \"\"\"\n    A custom component for implementing a Vector Store using Chroma.\n    \"\"\"\n\n    display_name: str = \"Kalavai VectorDB\"\n    description: str = \"Implementation of local Vector Store in Kalavai\"\n    documentation = \"https://python.langchain.com/docs/integrations/vectorstores/chroma\"\n    beta: bool = True\n\n    def build_config(self):\n        \"\"\"\n        Builds the configuration for the component.\n\n        Returns:\n        - dict: A dictionary containing the configuration options for the component.\n        \"\"\"\n        return {\n            \"collection_name\": {\"display_name\": \"Collection Name\", \"value\": \"langflow\"},\n            \"persist\": {\"display_name\": \"Persist\"},\n            \"persist_directory\": {\"display_name\": \"Persist Directory\"},\n            \"code\": {\"advanced\": True, \"display_name\": \"Code\"},\n            \"documents\": {\"display_name\": \"Documents\", \"is_list\": True},\n            \"embedding\": {\"display_name\": \"Embedding\"},\n            \"chroma_server_cors_allow_origins\": {\n                \"display_name\": \"Server CORS Allow Origins\",\n                \"advanced\": True,\n            },\n            \"chroma_server_host\": {\"display_name\": \"Server Host\", \"advanced\": True},\n            \"chroma_server_port\": {\"display_name\": \"Server Port\", \"advanced\": True},\n            \"chroma_server_grpc_port\": {\n                \"display_name\": \"Server gRPC Port\",\n                \"advanced\": True,\n            },\n            \"chroma_server_ssl_enabled\": {\n                \"display_name\": \"Server SSL Enabled\",\n                \"advanced\": True,\n            },\n        }\n\n    def build(\n        self,\n        collection_name: str,\n        persist: bool,\n        embedding: Embeddings,\n        chroma_server_ssl_enabled: bool,\n        persist_directory: Optional[str] = None,\n        documents: Optional[List[Document]] = None,\n        chroma_server_cors_allow_origins: Optional[str] = None,\n        chroma_server_host: Optional[str] = None,\n        chroma_server_port: Optional[int] = None,\n        chroma_server_grpc_port: Optional[int] = None,\n    ) -> Union[VectorStore, BaseRetriever]:\n        \"\"\"\n        Builds the Vector Store or BaseRetriever object.\n\n        Args:\n        - collection_name (str): The name of the collection.\n        - persist_directory (Optional[str]): The directory to persist the Vector Store to.\n        - chroma_server_ssl_enabled (bool): Whether to enable SSL for the Chroma server.\n        - persist (bool): Whether to persist the Vector Store or not.\n        - embedding (Optional[Embeddings]): The embeddings to use for the Vector Store.\n        - documents (Optional[Document]): The documents to use for the Vector Store.\n        - chroma_server_cors_allow_origins (Optional[str]): The CORS allow origins for the Chroma server.\n        - chroma_server_host (Optional[str]): The host for the Chroma server.\n        - chroma_server_port (Optional[int]): The port for the Chroma server.\n        - chroma_server_grpc_port (Optional[int]): The gRPC port for the Chroma server.\n\n        Returns:\n        - Union[VectorStore, BaseRetriever]: The Vector Store or BaseRetriever object.\n        \"\"\"\n\n        # Chroma settings\n        chroma_settings = None\n\n        if chroma_server_host is not None:\n            chroma_settings = chromadb.config.Settings(\n                chroma_server_cors_allow_origins=chroma_server_cors_allow_origins or None,\n                chroma_server_host=chroma_server_host,\n                chroma_server_port=chroma_server_port or None,\n                chroma_server_grpc_port=chroma_server_grpc_port or None,\n                chroma_server_ssl_enabled=chroma_server_ssl_enabled,\n            )\n\n        # If documents, then we need to create a Chroma instance using .from_documents\n        if documents is not None and embedding is not None:\n            if len(documents) == 0:\n                raise ValueError(\"If documents are provided, there must be at least one document.\")\n            return Chroma.from_documents(\n                documents=documents,  # type: ignore\n                persist_directory=persist_directory if persist else None,\n                collection_name=collection_name,\n                embedding=embedding,\n                client_settings=chroma_settings,\n            )\n\n        return Chroma(persist_directory=persist_directory, client_settings=chroma_settings)","fileTypes":[],"file_path":"","password":false,"name":"code","advanced":true,"dynamic":true,"info":"","title_case":true},"collection_name":{"type":"str","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"value":"adam","fileTypes":[],"file_path":"","password":false,"name":"collection_name","display_name":"Collection Name","advanced":false,"dynamic":false,"info":"","title_case":true},"persist":{"type":"bool","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"value":false,"fileTypes":[],"file_path":"","password":false,"name":"persist","display_name":"Persist","advanced":false,"dynamic":false,"info":"","title_case":true},"persist_directory":{"type":"str","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"persist_directory","display_name":"Persist Directory","advanced":false,"dynamic":false,"info":"","title_case":true},"_type":"CustomComponent"},"description":"Implementation of local Vector Store in Kalavai","base_classes":["VectorStore","BaseRetriever"],"display_name":"Kalavai VectorDB","documentation":"https://python.langchain.com/docs/integrations/vectorstores/chroma","custom_fields":{"collection_name":null,"persist":null,"embedding":null,"chroma_server_ssl_enabled":null,"persist_directory":null,"documents":null,"chroma_server_cors_allow_origins":null,"chroma_server_host":null,"chroma_server_port":null,"chroma_server_grpc_port":null},"output_types":["VectorStore","BaseRetriever"],"field_formatters":{},"beta":true},"id":"KalavaiDB-yi2jj"},"selected":false,"width":384,"height":556},{"id":"KalavaiEmbedding-u7wya","type":"genericNode","position":{"x":226.68559963436383,"y":798.4535027395182},"data":{"type":"KalavaiEmbedding","node":{"template":{"code":{"type":"code","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"value":"import os\n\nimport requests\nfrom langchain_community.embeddings import InfinityEmbeddings\nfrom langflow import CustomComponent\n#from pydantic.v1.types import SecretStr\n\n\n\nclass KalavaiEmbeddingsComponent(CustomComponent):\n    display_name = \"Kalavai Embeddings\"\n    description = \"Kalavai sentence_transformers embedding models, API version.\"\n    documentation = \"https://python.langchain.com/v0.1/docs/integrations/text_embedding/infinity/\"\n    \n    def load_embeddings_url(self):\n        return os.getenv(\"EMBEDDING_API_URL\", \"https://embeddings.test.k8s.mvp.kalavai.net\")\n    \n    def load_models(self):\n        # fetch available models\n        EMBEDDING_API_URL = self.load_embeddings_url()\n        response = requests.get(\n            f\"{EMBEDDING_API_URL}/models\"\n        )\n        models = []\n        for model_specs in response.json()[\"data\"]:\n            models.append(model_specs[\"id\"])\n\n    def build_config(self):\n        models = self.load_models()\n        return {\n            \"model_name\": {\n                \"display_name\": \"Model Name\",\n                \"field_type\": \"str\",\n                \"advanced\": False,\n                \"required\": False,\n                \"options\": models\n            }\n        }\n\n    def build(\n        self,\n        model_name: str,\n    ) -> InfinityEmbeddings:\n        return InfinityEmbeddings(\n            infinity_api_url=self.load_embeddings_url(),\n            model=model_name,\n        )","fileTypes":[],"file_path":"","password":false,"name":"code","advanced":false,"dynamic":true,"info":"","title_case":true},"model_name":{"type":"str","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"model_name","display_name":"Model Name","advanced":false,"dynamic":false,"info":"","title_case":true,"value":"BAAI/bge-large-en-v1.5"},"_type":"CustomComponent"},"description":"Kalavai sentence_transformers embedding models, API version.","base_classes":["InfinityEmbeddings","Embeddings"],"display_name":"Kalavai Embeddings","documentation":"https://python.langchain.com/v0.1/docs/integrations/text_embedding/infinity/","custom_fields":{"model_name":null},"output_types":["InfinityEmbeddings"],"field_formatters":{},"beta":true},"id":"KalavaiEmbedding-u7wya"},"selected":false,"width":384,"height":395},{"id":"CharacterTextSplitter-o2vyX","type":"genericNode","position":{"x":235.89260921562345,"y":105.48653174852348},"data":{"type":"CharacterTextSplitter","node":{"template":{"documents":{"type":"Document","required":true,"placeholder":"","list":true,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"documents","display_name":"Documents","advanced":false,"dynamic":false,"info":"","title_case":true},"chunk_overlap":{"type":"int","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"value":200,"fileTypes":[],"file_path":"","password":false,"name":"chunk_overlap","display_name":"Chunk Overlap","advanced":false,"dynamic":false,"info":"","title_case":true},"chunk_size":{"type":"int","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"value":1000,"fileTypes":[],"file_path":"","password":false,"name":"chunk_size","display_name":"Chunk Size","advanced":false,"dynamic":false,"info":"","title_case":true},"code":{"type":"code","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"value":"from typing import List\n\nfrom langchain.text_splitter import CharacterTextSplitter\nfrom langchain_core.documents.base import Document\nfrom langflow import CustomComponent\n\n\nclass CharacterTextSplitterComponent(CustomComponent):\n    display_name = \"CharacterTextSplitter\"\n    description = \"Splitting text that looks at characters.\"\n\n    def build_config(self):\n        return {\n            \"documents\": {\"display_name\": \"Documents\"},\n            \"chunk_overlap\": {\"display_name\": \"Chunk Overlap\", \"default\": 200},\n            \"chunk_size\": {\"display_name\": \"Chunk Size\", \"default\": 1000},\n            \"separator\": {\"display_name\": \"Separator\", \"default\": \"\\n\"},\n        }\n\n    def build(\n        self,\n        documents: List[Document],\n        chunk_overlap: int = 200,\n        chunk_size: int = 1000,\n        separator: str = \"\\n\",\n    ) -> List[Document]:\n        docs = CharacterTextSplitter(\n            chunk_overlap=chunk_overlap,\n            chunk_size=chunk_size,\n            separator=separator,\n        ).split_documents(documents)\n        self.status = docs\n        return docs\n","fileTypes":[],"file_path":"","password":false,"name":"code","advanced":false,"dynamic":true,"info":"","title_case":true},"separator":{"type":"str","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"value":"\\n","fileTypes":[],"file_path":"","password":false,"name":"separator","display_name":"Separator","advanced":false,"dynamic":false,"info":"","title_case":true},"_type":"CustomComponent"},"description":"Splitting text that looks at characters.","base_classes":["Document"],"display_name":"CharacterTextSplitter","documentation":"","custom_fields":{"documents":null,"chunk_overlap":null,"chunk_size":null,"separator":null},"output_types":["Document"],"field_formatters":{},"beta":true},"id":"CharacterTextSplitter-o2vyX"},"selected":false,"width":384,"height":595},{"id":"PyPDFLoader-G1ek4","type":"genericNode","position":{"x":-256.8699036197637,"y":190.6192446820511},"data":{"type":"PyPDFLoader","node":{"template":{"file_path":{"type":"file","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"value":"pub.1000011573.pdf","fileTypes":[".pdf"],"file_path":"/root/.cache/langflow/ac56bb50-134e-4b8a-ada8-1922ba222ab9/29296be05c8d8d3aedc0640378b9b699ed172c6c769bed7e02457c798129cf72.pdf","password":false,"name":"file_path","advanced":false,"dynamic":false,"info":"","title_case":true},"metadata":{"type":"dict","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"value":[{"":""}],"fileTypes":[],"file_path":"","password":false,"name":"metadata","display_name":"Metadata","advanced":false,"dynamic":false,"info":"","title_case":true},"_type":"PyPDFLoader"},"description":"Load PDF using pypdf into list of documents.","base_classes":["Document"],"display_name":"PyPDFLoader","documentation":"https://python.langchain.com/docs/modules/data_connection/document_loaders/how_to/pdf","custom_fields":{},"output_types":["Document"],"field_formatters":{},"beta":false},"id":"PyPDFLoader-G1ek4"},"selected":true,"width":384,"height":367,"positionAbsolute":{"x":-256.8699036197637,"y":190.6192446820511},"dragging":false}],"edges":[{"source":"KalavaiLlm-UTSYC","target":"CombineDocsChain-RoWar","sourceHandle":"{œbaseClassesœ:[œBaseLanguageModelœ,œBaseLLMœ,œBaseLanguageModelœ],œdataTypeœ:œKalavaiLlmœ,œidœ:œKalavaiLlm-UTSYCœ}","targetHandle":"{œfieldNameœ:œllmœ,œidœ:œCombineDocsChain-RoWarœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}","id":"reactflow__edge-KalavaiLlm-UTSYC{œbaseClassesœ:[œBaseLanguageModelœ,œBaseLLMœ,œBaseLanguageModelœ],œdataTypeœ:œKalavaiLlmœ,œidœ:œKalavaiLlm-UTSYCœ}-CombineDocsChain-RoWar{œfieldNameœ:œllmœ,œidœ:œCombineDocsChain-RoWarœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}","data":{"targetHandle":{"fieldName":"llm","id":"CombineDocsChain-RoWar","inputTypes":null,"type":"BaseLanguageModel"},"sourceHandle":{"baseClasses":["BaseLanguageModel","BaseLLM","BaseLanguageModel"],"dataType":"KalavaiLlm","id":"KalavaiLlm-UTSYC"}},"style":{"stroke":"#555"},"className":"stroke-gray-900  stroke-connection","animated":false,"selected":false},{"source":"VectorStoreRetriever-HhAfJ","target":"RetrievalQA-JFfxD","sourceHandle":"{œbaseClassesœ:[œVectorStoreRetrieverœ,œBaseRetrieverœ],œdataTypeœ:œVectorStoreRetrieverœ,œidœ:œVectorStoreRetriever-HhAfJœ}","targetHandle":"{œfieldNameœ:œretrieverœ,œidœ:œRetrievalQA-JFfxDœ,œinputTypesœ:null,œtypeœ:œBaseRetrieverœ}","id":"reactflow__edge-VectorStoreRetriever-HhAfJ{œbaseClassesœ:[œVectorStoreRetrieverœ,œBaseRetrieverœ],œdataTypeœ:œVectorStoreRetrieverœ,œidœ:œVectorStoreRetriever-HhAfJœ}-RetrievalQA-JFfxD{œfieldNameœ:œretrieverœ,œidœ:œRetrievalQA-JFfxDœ,œinputTypesœ:null,œtypeœ:œBaseRetrieverœ}","data":{"targetHandle":{"fieldName":"retriever","id":"RetrievalQA-JFfxD","inputTypes":null,"type":"BaseRetriever"},"sourceHandle":{"baseClasses":["VectorStoreRetriever","BaseRetriever"],"dataType":"VectorStoreRetriever","id":"VectorStoreRetriever-HhAfJ"}},"style":{"stroke":"#555"},"className":"stroke-gray-900  stroke-connection","animated":false,"selected":false},{"source":"KalavaiDB-yi2jj","target":"VectorStoreRetriever-HhAfJ","sourceHandle":"{œbaseClassesœ:[œVectorStoreœ,œBaseRetrieverœ],œdataTypeœ:œKalavaiDBœ,œidœ:œKalavaiDB-yi2jjœ}","targetHandle":"{œfieldNameœ:œvectorstoreœ,œidœ:œVectorStoreRetriever-HhAfJœ,œinputTypesœ:null,œtypeœ:œVectorStoreœ}","id":"reactflow__edge-KalavaiDB-yi2jj{œbaseClassesœ:[œVectorStoreœ,œBaseRetrieverœ],œdataTypeœ:œKalavaiDBœ,œidœ:œKalavaiDB-yi2jjœ}-VectorStoreRetriever-HhAfJ{œfieldNameœ:œvectorstoreœ,œidœ:œVectorStoreRetriever-HhAfJœ,œinputTypesœ:null,œtypeœ:œVectorStoreœ}","data":{"targetHandle":{"fieldName":"vectorstore","id":"VectorStoreRetriever-HhAfJ","inputTypes":null,"type":"VectorStore"},"sourceHandle":{"baseClasses":["VectorStore","BaseRetriever"],"dataType":"KalavaiDB","id":"KalavaiDB-yi2jj"}},"style":{"stroke":"#555"},"className":"stroke-gray-900  stroke-connection","animated":false,"selected":false},{"source":"KalavaiEmbedding-u7wya","target":"KalavaiDB-yi2jj","sourceHandle":"{œbaseClassesœ:[œInfinityEmbeddingsœ,œEmbeddingsœ],œdataTypeœ:œKalavaiEmbeddingœ,œidœ:œKalavaiEmbedding-u7wyaœ}","targetHandle":"{œfieldNameœ:œembeddingœ,œidœ:œKalavaiDB-yi2jjœ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}","id":"reactflow__edge-KalavaiEmbedding-u7wya{œbaseClassesœ:[œInfinityEmbeddingsœ,œEmbeddingsœ],œdataTypeœ:œKalavaiEmbeddingœ,œidœ:œKalavaiEmbedding-u7wyaœ}-KalavaiDB-yi2jj{œfieldNameœ:œembeddingœ,œidœ:œKalavaiDB-yi2jjœ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}","data":{"targetHandle":{"fieldName":"embedding","id":"KalavaiDB-yi2jj","inputTypes":null,"type":"Embeddings"},"sourceHandle":{"baseClasses":["InfinityEmbeddings","Embeddings"],"dataType":"KalavaiEmbedding","id":"KalavaiEmbedding-u7wya"}},"style":{"stroke":"#555"},"className":"stroke-gray-900  stroke-connection","animated":false,"selected":false},{"source":"CombineDocsChain-RoWar","target":"RetrievalQA-JFfxD","sourceHandle":"{œbaseClassesœ:[œBaseCombineDocumentsChainœ,œCallableœ],œdataTypeœ:œCombineDocsChainœ,œidœ:œCombineDocsChain-RoWarœ}","targetHandle":"{œfieldNameœ:œcombine_documents_chainœ,œidœ:œRetrievalQA-JFfxDœ,œinputTypesœ:null,œtypeœ:œBaseCombineDocumentsChainœ}","id":"reactflow__edge-CombineDocsChain-RoWar{œbaseClassesœ:[œBaseCombineDocumentsChainœ,œCallableœ],œdataTypeœ:œCombineDocsChainœ,œidœ:œCombineDocsChain-RoWarœ}-RetrievalQA-JFfxD{œfieldNameœ:œcombine_documents_chainœ,œidœ:œRetrievalQA-JFfxDœ,œinputTypesœ:null,œtypeœ:œBaseCombineDocumentsChainœ}","data":{"targetHandle":{"fieldName":"combine_documents_chain","id":"RetrievalQA-JFfxD","inputTypes":null,"type":"BaseCombineDocumentsChain"},"sourceHandle":{"baseClasses":["BaseCombineDocumentsChain","Callable"],"dataType":"CombineDocsChain","id":"CombineDocsChain-RoWar"}},"style":{"stroke":"#555"},"className":"stroke-gray-900  stroke-connection","animated":false,"selected":false},{"source":"CharacterTextSplitter-o2vyX","target":"KalavaiDB-yi2jj","sourceHandle":"{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œCharacterTextSplitterœ,œidœ:œCharacterTextSplitter-o2vyXœ}","targetHandle":"{œfieldNameœ:œdocumentsœ,œidœ:œKalavaiDB-yi2jjœ,œinputTypesœ:null,œtypeœ:œDocumentœ}","id":"reactflow__edge-CharacterTextSplitter-o2vyX{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œCharacterTextSplitterœ,œidœ:œCharacterTextSplitter-o2vyXœ}-KalavaiDB-yi2jj{œfieldNameœ:œdocumentsœ,œidœ:œKalavaiDB-yi2jjœ,œinputTypesœ:null,œtypeœ:œDocumentœ}","data":{"targetHandle":{"fieldName":"documents","id":"KalavaiDB-yi2jj","inputTypes":null,"type":"Document"},"sourceHandle":{"baseClasses":["Document"],"dataType":"CharacterTextSplitter","id":"CharacterTextSplitter-o2vyX"}},"style":{"stroke":"#555"},"className":"stroke-gray-900  stroke-connection","animated":false,"selected":false},{"source":"PyPDFLoader-G1ek4","sourceHandle":"{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œPyPDFLoaderœ,œidœ:œPyPDFLoader-G1ek4œ}","target":"CharacterTextSplitter-o2vyX","targetHandle":"{œfieldNameœ:œdocumentsœ,œidœ:œCharacterTextSplitter-o2vyXœ,œinputTypesœ:null,œtypeœ:œDocumentœ}","data":{"targetHandle":{"fieldName":"documents","id":"CharacterTextSplitter-o2vyX","inputTypes":null,"type":"Document"},"sourceHandle":{"baseClasses":["Document"],"dataType":"PyPDFLoader","id":"PyPDFLoader-G1ek4"}},"style":{"stroke":"#555"},"className":"stroke-foreground  stroke-connection","animated":false,"id":"reactflow__edge-PyPDFLoader-G1ek4{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œPyPDFLoaderœ,œidœ:œPyPDFLoader-G1ek4œ}-CharacterTextSplitter-o2vyX{œfieldNameœ:œdocumentsœ,œidœ:œCharacterTextSplitter-o2vyXœ,œinputTypesœ:null,œtypeœ:œDocumentœ}"}],"viewport":{"x":534.9691027583455,"y":36.09332862367546,"zoom":0.7290046894082889}},"is_component":false,"updated_at":"2024-05-22T15:32:50.741376","folder":null,"id":"ac56bb50-134e-4b8a-ada8-1922ba222ab9","user_id":"bc1912ab-aeb7-4059-a38a-fb08595cd120"},{"name":"Document Summarisation","description":"A Simple Document Summarisation Pipeline","data":{"nodes":[{"id":"KalavaiLlm-A4vE2","type":"genericNode","position":{"x":-2329.0089472662007,"y":-952.7961351528339},"data":{"type":"KalavaiLlm","node":{"template":{"code":{"type":"code","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"value":"import os\nimport json\nfrom typing import Optional, Union\n\nfrom langchain.llms import BaseLLM\nfrom langchain_community.chat_models.openai import ChatOpenAI\n\nfrom langflow import CustomComponent\nfrom langflow.field_typing import BaseLanguageModel, NestedDict\n\n\nclass KalavaiLLMComponent(CustomComponent):\n    display_name = \"KalavaiLLM\"\n    description = \"API for LLM models deployed in Kalavai.\"\n    \n    def _load_endpoints(self):\n        MODEL_ENDPOINTS_FILE = os.getenv(\"MODEL_ENDPOINTS\", \"data/model_endpoints.json\")\n        \n        with open(MODEL_ENDPOINTS_FILE, \"r\") as f:\n            return json.load(f)\n        \n\n    def build_config(self):\n        model_endpoints = self._load_endpoints()\n        api_key = os.getenv(\"MODEL_ENDPOINT_API_KEY\", \"N3E9AGVU7IR9E6QLXMIP6YO330M2D005DH5MN4C6\")\n        return {\n            \"max_tokens\": {\n                \"display_name\": \"Max Tokens\",\n                \"field_type\": \"int\",\n                \"advanced\": False,\n                \"required\": False,\n            },\n            \"model_kwargs\": {\n                \"display_name\": \"Model Kwargs\",\n                \"field_type\": \"NestedDict\",\n                \"advanced\": True,\n                \"required\": False,\n            },\n            \"model_name\": {\n                \"display_name\": \"Model Name\",\n                \"field_type\": \"str\",\n                \"advanced\": False,\n                \"required\": False,\n                \"options\": list(model_endpoints.keys()),\n            },\n            \"kalavai_api_key\": {\n                \"display_name\": \"Kalavai API Key\",\n                \"field_type\": \"str\",\n                \"advanced\": True,\n                \"required\": False,\n                \"password\": True,\n                \"value\": api_key\n            },\n            \"temperature\": {\n                \"display_name\": \"Temperature\",\n                \"field_type\": \"float\",\n                \"advanced\": False,\n                \"required\": False,\n                \"value\": 0.7,\n            },\n        }\n\n    def build(\n        self,\n        max_tokens: Optional[int] = 256,\n        model_kwargs: NestedDict = {},\n        model_name: str = \"Equall/Saul-Instruct-v1\",\n        kalavai_api_key: Optional[str] = None,\n        temperature: float = 0.7,\n    ) -> Union[BaseLanguageModel, BaseLLM]:\n        model_endpoints = self._load_endpoints()\n        return ChatOpenAI(\n            max_tokens=max_tokens,\n            model_kwargs=model_kwargs,\n            model=model_name,\n            base_url=model_endpoints[model_name],\n            api_key=kalavai_api_key,\n            temperature=temperature,\n        )","fileTypes":[],"file_path":"","password":false,"name":"code","advanced":false,"dynamic":true,"info":"","title_case":true},"kalavai_api_key":{"type":"str","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"value":"N3E9AGVU7IR9E6QLXMIP6YO330M2D005DH5MN4C6","fileTypes":[],"file_path":"","password":true,"name":"kalavai_api_key","display_name":"Kalavai API Key","advanced":true,"dynamic":false,"info":"","title_case":true},"max_tokens":{"type":"int","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"value":256,"fileTypes":[],"file_path":"","password":false,"name":"max_tokens","display_name":"Max Tokens","advanced":false,"dynamic":false,"info":"","title_case":true},"model_kwargs":{"type":"NestedDict","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"value":{},"fileTypes":[],"file_path":"","password":false,"name":"model_kwargs","display_name":"Model Kwargs","advanced":true,"dynamic":false,"info":"","title_case":true},"model_name":{"type":"str","required":false,"placeholder":"","list":true,"show":true,"multiline":false,"value":"meta-llama/Meta-Llama-3-8B-Instruct","fileTypes":[],"file_path":"","password":false,"options":["meta-llama/Meta-Llama-3-8B-Instruct","Equall/Saul-Instruct-v1"],"name":"model_name","display_name":"Model Name","advanced":false,"dynamic":false,"info":"","title_case":true},"temperature":{"type":"float","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"value":0.7,"fileTypes":[],"file_path":"","password":false,"name":"temperature","display_name":"Temperature","advanced":false,"dynamic":false,"info":"","rangeSpec":{"min":-1,"max":1,"step":0.1},"title_case":true},"_type":"CustomComponent"},"description":"API for LLM models deployed in Kalavai.","base_classes":["BaseLanguageModel","BaseLanguageModel","BaseLLM"],"display_name":"KalavaiLLM","documentation":"","custom_fields":{"max_tokens":null,"model_kwargs":null,"model_name":null,"kalavai_api_key":null,"temperature":null},"output_types":["BaseLanguageModel","BaseLLM"],"field_formatters":{},"beta":true},"id":"KalavaiLlm-A4vE2"},"selected":false,"width":384,"height":543,"positionAbsolute":{"x":-2329.0089472662007,"y":-952.7961351528339},"dragging":false},{"id":"PromptTemplate-vCh3C","type":"genericNode","position":{"x":-2409.3867411207066,"y":-362.6382819027769},"data":{"type":"PromptTemplate","node":{"template":{"output_parser":{"type":"BaseOutputParser","required":false,"placeholder":"","list":false,"show":false,"multiline":false,"fileTypes":[],"password":false,"name":"output_parser","advanced":false,"dynamic":true,"info":"","title_case":true},"input_types":{"type":"dict","required":false,"placeholder":"","list":false,"show":false,"multiline":false,"fileTypes":[],"password":false,"name":"input_types","advanced":false,"dynamic":true,"info":"","title_case":true},"input_variables":{"type":"str","required":true,"placeholder":"","list":true,"show":false,"multiline":false,"fileTypes":[],"password":false,"name":"input_variables","advanced":false,"dynamic":true,"info":"","title_case":true,"value":["documents"]},"metadata":{"type":"dict","required":false,"placeholder":"","list":false,"show":false,"multiline":false,"fileTypes":[],"password":false,"name":"metadata","advanced":false,"dynamic":true,"info":"","title_case":true},"name":{"type":"str","required":false,"placeholder":"","list":false,"show":false,"multiline":false,"fileTypes":[],"password":false,"name":"name","advanced":false,"dynamic":true,"info":"","title_case":true},"partial_variables":{"type":"dict","required":false,"placeholder":"","list":false,"show":false,"multiline":false,"fileTypes":[],"password":false,"name":"partial_variables","advanced":false,"dynamic":true,"info":"","title_case":true},"tags":{"type":"str","required":false,"placeholder":"","list":true,"show":false,"multiline":false,"fileTypes":[],"password":false,"name":"tags","advanced":false,"dynamic":true,"info":"","title_case":true},"template":{"type":"prompt","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"fileTypes":[],"password":false,"name":"template","advanced":false,"dynamic":true,"info":"","title_case":true,"value":"Summarise the following Documents:\n\n{documents}"},"template_format":{"type":"str","required":false,"placeholder":"","list":false,"show":false,"multiline":false,"value":"f-string","fileTypes":[],"password":false,"name":"template_format","advanced":false,"dynamic":true,"info":"","title_case":true},"validate_template":{"type":"bool","required":false,"placeholder":"","list":false,"show":false,"multiline":false,"value":false,"fileTypes":[],"password":false,"name":"validate_template","advanced":false,"dynamic":true,"info":"","title_case":true},"_type":"PromptTemplate","documents":{"type":"str","required":false,"placeholder":"","list":false,"show":true,"multiline":true,"value":"","fileTypes":[],"file_path":"","password":false,"name":"documents","display_name":"documents","advanced":false,"input_types":["Document","BaseOutputParser"],"dynamic":false,"info":"","title_case":true}},"description":"Prompt template for a language model.","icon":null,"base_classes":["PromptTemplate","StringPromptTemplate","BasePromptTemplate"],"name":"","display_name":"PromptTemplate","documentation":"https://python.langchain.com/docs/modules/model_io/prompts/prompt_templates/","custom_fields":{"":["documents"]},"output_types":[],"full_path":null,"field_formatters":{},"beta":false,"error":null},"id":"PromptTemplate-vCh3C","description":"Prompt template for a language model.","display_name":"PromptTemplate"},"selected":false,"width":384,"height":375,"positionAbsolute":{"x":-2409.3867411207066,"y":-362.6382819027769},"dragging":false},{"id":"PyPDFLoader-1RvrC","type":"genericNode","position":{"x":-2951.3025790486504,"y":-359.81580358023547},"data":{"type":"PyPDFLoader","node":{"template":{"file_path":{"type":"file","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"value":"pub.1000011573.pdf","fileTypes":[".pdf"],"file_path":"/root/.cache/langflow/61112730-d771-4d30-90e7-6e203cc4c231/29296be05c8d8d3aedc0640378b9b699ed172c6c769bed7e02457c798129cf72.pdf","password":false,"name":"file_path","advanced":false,"dynamic":false,"info":"","title_case":true},"metadata":{"type":"dict","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"value":[{"":""}],"fileTypes":[],"file_path":"","password":false,"name":"metadata","display_name":"Metadata","advanced":false,"dynamic":false,"info":"","title_case":true},"_type":"PyPDFLoader"},"description":"Load PDF using pypdf into list of documents.","base_classes":["Document"],"display_name":"PyPDFLoader","documentation":"https://python.langchain.com/docs/modules/data_connection/document_loaders/how_to/pdf","custom_fields":{},"output_types":["Document"],"field_formatters":{},"beta":false},"id":"PyPDFLoader-1RvrC"},"selected":false,"width":384,"height":367,"positionAbsolute":{"x":-2951.3025790486504,"y":-359.81580358023547},"dragging":false},{"id":"LLMChain-qg0i1","type":"genericNode","position":{"x":-1704.2107795569566,"y":-671.2653528317347},"data":{"type":"LLMChain","node":{"template":{"llm":{"type":"BaseLanguageModel","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"llm","display_name":"LLM","advanced":false,"dynamic":false,"info":"","title_case":true},"memory":{"type":"BaseMemory","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"memory","display_name":"Memory","advanced":false,"dynamic":false,"info":"","title_case":true},"prompt":{"type":"BasePromptTemplate","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"prompt","display_name":"Prompt","advanced":false,"dynamic":false,"info":"","title_case":true},"code":{"type":"code","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"value":"from typing import Callable, Optional, Union\n\nfrom langchain.chains import LLMChain\n\nfrom langflow import CustomComponent\nfrom langflow.field_typing import (\n    BaseLanguageModel,\n    BaseMemory,\n    BasePromptTemplate,\n    Chain,\n)\n\n\nclass LLMChainComponent(CustomComponent):\n    display_name = \"LLMChain\"\n    description = \"Chain to run queries against LLMs\"\n\n    def build_config(self):\n        return {\n            \"prompt\": {\"display_name\": \"Prompt\"},\n            \"llm\": {\"display_name\": \"LLM\"},\n            \"memory\": {\"display_name\": \"Memory\"},\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        prompt: BasePromptTemplate,\n        llm: BaseLanguageModel,\n        memory: Optional[BaseMemory] = None,\n    ) -> Union[Chain, Callable, LLMChain]:\n        return LLMChain(prompt=prompt, llm=llm, memory=memory)\n","fileTypes":[],"file_path":"","password":false,"name":"code","advanced":false,"dynamic":true,"info":"","title_case":true},"_type":"CustomComponent"},"description":"Chain to run queries against LLMs","base_classes":["Chain","Callable","Chain","LLMChain"],"display_name":"LLMChain","documentation":"","custom_fields":{"prompt":null,"llm":null,"memory":null},"output_types":["Chain","Callable","LLMChain"],"field_formatters":{},"beta":true},"id":"LLMChain-qg0i1"},"selected":true,"width":384,"height":425,"dragging":false,"positionAbsolute":{"x":-1704.2107795569566,"y":-671.2653528317347}}],"edges":[{"source":"PyPDFLoader-1RvrC","sourceHandle":"{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œPyPDFLoaderœ,œidœ:œPyPDFLoader-1RvrCœ}","target":"PromptTemplate-vCh3C","targetHandle":"{œfieldNameœ:œdocumentsœ,œidœ:œPromptTemplate-vCh3Cœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ],œtypeœ:œstrœ}","data":{"targetHandle":{"fieldName":"documents","id":"PromptTemplate-vCh3C","inputTypes":["Document","BaseOutputParser"],"type":"str"},"sourceHandle":{"baseClasses":["Document"],"dataType":"PyPDFLoader","id":"PyPDFLoader-1RvrC"}},"style":{"stroke":"#555"},"className":"stroke-foreground  stroke-connection","animated":false,"id":"reactflow__edge-PyPDFLoader-1RvrC{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œPyPDFLoaderœ,œidœ:œPyPDFLoader-1RvrCœ}-PromptTemplate-vCh3C{œfieldNameœ:œdocumentsœ,œidœ:œPromptTemplate-vCh3Cœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ],œtypeœ:œstrœ}"},{"source":"PromptTemplate-vCh3C","sourceHandle":"{œbaseClassesœ:[œPromptTemplateœ,œStringPromptTemplateœ,œBasePromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-vCh3Cœ}","target":"LLMChain-qg0i1","targetHandle":"{œfieldNameœ:œpromptœ,œidœ:œLLMChain-qg0i1œ,œinputTypesœ:null,œtypeœ:œBasePromptTemplateœ}","data":{"targetHandle":{"fieldName":"prompt","id":"LLMChain-qg0i1","inputTypes":null,"type":"BasePromptTemplate"},"sourceHandle":{"baseClasses":["PromptTemplate","StringPromptTemplate","BasePromptTemplate"],"dataType":"PromptTemplate","id":"PromptTemplate-vCh3C"}},"style":{"stroke":"#555"},"className":"stroke-foreground  stroke-connection","animated":false,"id":"reactflow__edge-PromptTemplate-vCh3C{œbaseClassesœ:[œPromptTemplateœ,œStringPromptTemplateœ,œBasePromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-vCh3Cœ}-LLMChain-qg0i1{œfieldNameœ:œpromptœ,œidœ:œLLMChain-qg0i1œ,œinputTypesœ:null,œtypeœ:œBasePromptTemplateœ}"},{"source":"KalavaiLlm-A4vE2","sourceHandle":"{œbaseClassesœ:[œBaseLanguageModelœ,œBaseLanguageModelœ,œBaseLLMœ],œdataTypeœ:œKalavaiLlmœ,œidœ:œKalavaiLlm-A4vE2œ}","target":"LLMChain-qg0i1","targetHandle":"{œfieldNameœ:œllmœ,œidœ:œLLMChain-qg0i1œ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}","data":{"targetHandle":{"fieldName":"llm","id":"LLMChain-qg0i1","inputTypes":null,"type":"BaseLanguageModel"},"sourceHandle":{"baseClasses":["BaseLanguageModel","BaseLanguageModel","BaseLLM"],"dataType":"KalavaiLlm","id":"KalavaiLlm-A4vE2"}},"style":{"stroke":"#555"},"className":"stroke-foreground  stroke-connection","animated":false,"id":"reactflow__edge-KalavaiLlm-A4vE2{œbaseClassesœ:[œBaseLanguageModelœ,œBaseLanguageModelœ,œBaseLLMœ],œdataTypeœ:œKalavaiLlmœ,œidœ:œKalavaiLlm-A4vE2œ}-LLMChain-qg0i1{œfieldNameœ:œllmœ,œidœ:œLLMChain-qg0i1œ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}"}],"viewport":{"x":1236.237425270137,"y":491.15097940676526,"zoom":0.35159829997827813}},"is_component":false,"updated_at":"2024-05-23T13:43:38.235788","folder":null,"id":"61112730-d771-4d30-90e7-6e203cc4c231","user_id":"bc1912ab-aeb7-4059-a38a-fb08595cd120"}]}